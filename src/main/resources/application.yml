spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        spring.json.add.type.headers: false
    consumer:
      properties:
        spring.json.trusted.packages: "*"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

  cloud:
    function:
      definition: process;fraud;inventory
    stream:
      bindings:
        process-in-0.destination: orders
        process-out-0.destination: order-validations

        fraud-in-0.destination: orders
        fraud-out-0.destination: order-validations

        inventory-in-0.destination: orders
        inventory-in-1.destination: warehouse-inventory
        inventory-in-2.materializedAs: reservedStock
        inventory-out-0.destination: order-validations

      kafka:
        streams:
          binder:
#            headerMapperBeanName: kafkaHeaderMapper
            application-id: hello-word-count-sample
            brokers: localhost:9092
            configuration:
#                spring.json.trusted.packages: "*"
                key-serializer: org.apache.kafka.common.serialization.StringSerializer
                value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
                key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            functions:
              process.applicationId: processProcessor
              fraud.applicationId: fraudProcessor
              inventory.applicationId: InventoryProcessor

#        binder:
#          headerMapperBeanName: kafkaHeaderMapper
#          consumer-properties:
#            spring.json.trusted.packages: "*"

logging:
  level:
    root: ERROR